# SPDX-License-Identifier: BUSL-1.1
#
# Copyright (C) 2023, Blackchain Foundation. All rights reserved.
# Use of this software is govered by the Business Source License included
# in the LICENSE file of this repository and at www.mariadb.com/bsl11.
#
# ANY USE OF THE LICENSED WORK IN VIOLATION OF THIS LICENSE WILL AUTOMATICALLY
# TERMINATE YOUR RIGHTS UNDER THIS LICENSE FOR THE CURRENT AND ALL OTHER
# VERSIONS OF THE LICENSED WORK.
#
# THIS LICENSE DOES NOT GRANT YOU ANY RIGHT IN ANY TRADEMARK OR LOGO OF
# LICENSOR OR ITS AFFILIATES (PROVIDED THAT YOU MAY USE A TRADEMARK OR LOGO OF
# LICENSOR AS EXPRESSLY REQUIRED BY THIS LICENSE).
#
# TO THE EXTENT PERMITTED BY APPLICABLE LAW, THE LICENSED WORK IS PROVIDED ON
# AN “AS IS” BASIS. LICENSOR HEREBY DISCLAIMS ALL WARRANTIES AND CONDITIONS,
# EXPRESS OR IMPLIED, INCLUDING (WITHOUT LIMITATION) WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, NON-INFRINGEMENT, AND
# TITLE.

name: pipeline

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  ci:
    strategy:
      matrix:
        args:
          [
            "build",
            "lint",
            "testunitrace",
            "testunitcover",
            "testintegrationcover",
          ]
        os: [ubuntu-latest]
        go-version: [1.20.4]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
      - name: Setup Golang
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}
      - name: Cache Golang Deps
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go
          key: ${{ runner.os }}-golang-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-golang-
      - name: Install Go Tools
        run: |
          go run magefiles/setup/setup.go ci
      - name: Run ${{ matrix.args }}
        uses: magefile/mage-action@v2
        with:
          version: latest
          args: ${{ matrix.args }}
        env:
          GOPATH: /home/runner/go
      - name: Archive code coverage results
        uses: actions/upload-artifact@v3
        with:
          name: code-coverage-report
          path: coverage-${{ matrix.args }}.txt
          retention-days: 1
        if: ${{ matrix.args == 'testunitcover' || matrix.args == 'testintegrationcover' }}

  codecov:
    name: codecov(uploader, ubuntu-latest)
    runs-on: ubuntu-latest
    needs: ci
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Download code coverage results
        uses: actions/download-artifact@v2
        with:
          name: code-coverage-report
      - name: Upload to Codecov
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
